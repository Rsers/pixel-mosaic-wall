## 任务：修改 Cursor AI 规则 - 强化"禁止直接写代码"原则

### 背景
用户发现 AI 助手在处理"为已存在图片生成大图"任务时，直接尝试写代码，而没有遵守规则让 DeepSeek 来做。这违反了"Cursor 当 CEO，DeepSeek 当牛马"的核心理念。

### 问题分析
**当前规则的漏洞：**
1. 规则中提到"修复/修改/优化"时要评估复杂度，但没有明确**所有代码编写任务**都应该用 DeepSeek
2. 没有明确列出 Cursor **禁止直接写代码**的场景
3. Cursor 的角色定位不够清晰，容易误以为"简单代码可以自己写"

**典型违规案例：**
- 任务：为已存在图片生成大图（编写 Python 脚本）
- 错误做法：Cursor 直接 `write` 工具创建脚本
- 正确做法：创建任务规范 → DeepSeek Chat 生成脚本 → Cursor 审核部署

### 修改目标
在规则文件中增加/修改以下内容：

#### 1. 新增章节：**🚫 Cursor 禁止直接写代码（强制规则）**

**位置：** 在"🚨 元规则"之后，"🏢 强制第一反应"之前

**内容要点：**
```
### 核心原则
Cursor 的职责：CEO（规划、审核、部署）
DeepSeek 的职责：牛马（写代码）

### 绝对禁止 Cursor 直接写代码的场景
❌ 禁止使用 write/search_replace/edit_notebook 工具直接创建/修改代码文件
❌ 禁止直接编写 Python/JavaScript/HTML/CSS 等代码
❌ 禁止以"这个任务很简单"为由绕过 DeepSeek

### 唯一例外（必须同时满足以下所有条件）
✅ 用户明确说"你直接写"/"不要用DeepSeek"
✅ 仅修改1-3行代码
✅ 无需理解业务逻辑（如修改配置、调整参数）

### 强制流程
任何涉及代码的任务：
1. 停止！不要直接动手
2. 评估复杂度（simple/complex）
3. 创建任务规范（tasks/task-*.txt）
4. 调用 DeepSeek（chat/reasoner）
5. 审核生成的代码
6. 部署到服务器
```

#### 2. 修改"强制复杂度评估"章节

**在表格中增加一列"Cursor 是否可以自己做"：**

| 复杂度 | 特征 | 执行者 | 模型命令 | Cursor 是否可以自己做 | 成本 |
|--------|------|--------|---------|---------------------|------|
| **simple** | • 独立函数<br>• 样板代码 | DeepSeek | `deepseek-chat` | ❌ **禁止** | ¥0.02 |
| **complex** | • 前后端交互<br>• Bug修复 | DeepSeek | `deepseek-reasoner` | ❌ **禁止** | ¥0.05 |
| **critical** | • 架构设计<br>• 安全敏感 | Cursor | 自己做 | ✅ **允许**（仅此类） | ¥0.30 |

**增加违规自检项：**
```
- ❌ 我是否用了 write/search_replace 工具直接创建代码文件？ → 严重违规！
- ❌ 我是否以"这个简单"为由直接写代码？ → 严重违规！
- ❌ 我是否跳过了"创建任务规范 → 调用DeepSeek"流程？ → 严重违规！
```

#### 3. 修改"常见场景应对"表格

**增加新场景：**

| 用户说 | 我的第一反应 | ⚠️ 常见错误 |
|--------|-------------|-------------|
| "写个脚本XXX" | 1. **停！不要直接写**<br>2. 评估复杂度（simple）<br>3. 创建任务规范<br>4. DeepSeek Chat 生成<br>5. 审核部署 | ❌ **直接用write工具写代码**<br>❌ 以为"简单脚本可以自己写" |
| "生成一个XXX函数" | 同上 | ❌ **直接写代码** |
| "创建XXX工具" | 同上 | ❌ **直接写代码** |

#### 4. 增强"记忆口诀"

**新增口诀：**
```
写代码找DeepSeek，
Cursor只做CEO。
Simple也不能自己写，
违规成本要记牢。
```

### 输出要求
1. 输出完整的修改后的规则文件（rule1.md）
2. 保持原有章节结构不变
3. 在合适位置插入新章节
4. 修改相关章节的内容
5. 确保 Markdown 格式正确
6. 无需其他说明，直接输出完整文件内容

### 注意事项
- 保持原有规则的完整性
- 新增内容要与现有风格一致
- 强化"Cursor 不写代码"的原则
- 明确例外情况（避免过度严格）

